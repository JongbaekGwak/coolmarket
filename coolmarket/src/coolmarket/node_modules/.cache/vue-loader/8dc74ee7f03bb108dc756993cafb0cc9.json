{"remainingRequest":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/src/views/Main.vue?vue&type=template&id=3c966e71&scoped=true&","dependencies":[{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/src/views/Main.vue","mtime":1630027536697},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}