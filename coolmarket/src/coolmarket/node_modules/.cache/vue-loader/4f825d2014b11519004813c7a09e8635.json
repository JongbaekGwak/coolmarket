{"remainingRequest":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/src/views/AdDetail.vue?vue&type=template&id=feb51ae4&scoped=true&","dependencies":[{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/src/views/AdDetail.vue","mtime":1629772936601},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}