{"remainingRequest":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/src/views/CommuComent.vue?vue&type=style&index=0&id=4fe0e07e&scoped=true&lang=css&","dependencies":[{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/src/views/CommuComent.vue","mtime":1630113174255},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jb/javabtc/coolmarket/coolmarket/src/coolmarket/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmN1cnNvciB7CiAgY3Vyc29yOiBwb2ludGVyOwp9Ci5wcmUgewogIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsKfQo="},{"version":3,"sources":["CommuComent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AACA;AACA;AACA","file":"CommuComent.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"mt-3\">\n      <div class=\"d-flex border\" v-for=\"item in coment\" :key=\"item.comentNo\">\n        <div class=\"border-end\" style=\"width: 20%\">\n          <div class=\"mb-2\">\n            {{ item.comentNickName }}\n            <b-button\n              class=\"ms-auto\"\n              size=\"sm\"\n              variant=\"danger\"\n              v-if=\"item.comentUserNo == myUserNo || myRank == 0\"\n              v-on:click=\"comentDelete(item.comentNo)\"\n              >삭제</b-button\n            >\n          </div>\n          <div>\n            {{ item.comentCreaDt }}\n          </div>\n        </div>\n\n        <pre\n          class=\"p-0 m-0 pre\"\n          style=\"width: 80%\"\n          v-text=\"item.comentContents\"\n        ></pre>\n      </div>\n    </div>\n    <b-input-group class=\"mt-3\">\n      <b-textarea\n        v-model=\"insert\"\n        placeholder=\"댓글 입력\"\n        rows=\"3\"\n        max-rows=\"6\"\n        class=\"pre\"\n      ></b-textarea>\n      <b-input-group-text class=\"btn bg-info\" v-on:click=\"comentInsert\">\n        입력\n      </b-input-group-text>\n    </b-input-group>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      coment: [],\n      insert: \"\",\n      myUserNo: \"\",\n      marNo: \"\",\n    };\n  },\n  mounted() {\n    this.myUserNo = this.$session.get(\"coolUserNo\");\n    this.myRank = this.$session.get(\"coolRank\");\n    this.$axios\n      .get(\"http://localhost:9000/coment\", {\n        params: { comentComNo: this.$route.query.comNo },\n      })\n      .then((res) => {\n        this.coment = res.data;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  },\n  methods: {\n    comentInsert() {\n      this.$axios\n        .get(\"http://localhost:9000/comentInsert\", {\n          params: {\n            comentComNo: this.$route.query.comNo,\n            comentUserNo: this.$session.get(\"coolUserNo\"),\n            comentNickName: this.$session.get(\"coolNickName\"),\n            comentContents: this.insert,\n          },\n        })\n        .then((res) => {\n          this.coment = res.data;\n          this.insert = \"\";\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    comentDelete(num) {\n      this.$axios\n        .get(\"http://localhost:9000/comentDelete\", {\n          params: { comentNo: num, comentComNo: this.$route.query.comNo },\n        })\n        .then((res) => {\n          this.coment = res.data;\n          alert(\"삭제완료\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  },\n};\n</script>\n<style scoped>\n.cursor {\n  cursor: pointer;\n}\n.pre {\n  white-space: pre-wrap;\n}\n</style>"]}]}